#N canvas 0 0 715 500 12;
#X text 30 50 General purpose Pd library used for work and education
purposes in centre of electroacoustic music of Moscow Conservatory
(CEAMMC) and ZIL-electro studio. ;
#X obj 20 101 cnv 5 48 31 empty empty conv 4 13 0 17 -262144 -49933 0;
#X obj 20 142 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 153 conv.bpm2hz;
#X text 175 153 converts BPM to frequency in herz;
#X obj 30 180 conv.bpm2ms;
#X text 175 180 convert frequency in BPM to period in milliseconds;
#X obj 30 207 conv.sec2str;
#X text 175 207 converts float time in seconds to formated symbol;
#X obj 30 234 conv.str2sec;
#X text 175 234 converts formatted time to float value in seconds;
#X obj 20 261 cnv 5 48 31 empty empty data 4 13 0 17 -262144 -49933 0;
#X obj 20 302 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 313 data.fifo;
#X text 175 313 First-In-First-Out (FIFO) queue data container;
#X obj 30 340 data.list;
#X text 175 340 list container;
#X obj 20 367 cnv 5 38 31 empty empty dyn 4 13 0 17 -262144 -49933 0;
#X obj 20 408 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 419 dyn.comp2~;
#X text 175 419 stereo dynamic range compressor;
#X obj 30 446 dyn.comp~;
#X text 175 446 mono dynamic range compressors;
#X obj 30 473 dyn.gate2~;
#X text 175 473 stereo signal gate;
#X obj 30 500 dyn.gate~;
#X text 175 500 mono signal gate;
#X obj 30 527 dyn.limit2~;
#X text 175 527 stereo 1176LN Peak Limiter;
#X obj 30 554 dyn.limit~;
#X text 175 554 mono 1176LN Peak Limiter;
#X obj 30 581 dyn.softclip~;
#X text 175 581 soft signal clip;
#X obj 20 608 cnv 5 38 31 empty empty env 4 13 0 17 -262144 -49933 0;
#X obj 20 649 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 660 env.adsr~;
#X text 175 660 ADSR (Attack \, Decay \, Sustain \, Release) envelope
generator;
#X obj 30 687 env.ar~;
#X text 175 687 AR (Attack \, Release) envelope generator (useful to
create percussion envelopes).;
#X obj 30 724 env.follow~;
#X text 175 724 Envelope follower with independent attack and release
times.;
#X obj 20 761 cnv 5 49 31 empty empty flow 4 13 0 17 -262144 -49933 0;
#X obj 20 802 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 813 expand_env;
#X text 175 813 Substitute enviroment variables in data stream;
#X obj 30 840 flow.sync;
#X text 175 840 bus with only hot inlets;
#X obj 30 867 replace;
#X text 175 867 Replace atoms in data stream;
#X obj 20 894 cnv 5 37 31 empty empty flt 4 13 0 17 -262144 -49933 0;
#X obj 20 935 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 946 flt.biquad~;
#X text 175 946 second order IIR filter.;
#X obj 30 973 flt.bpf12~;
#X text 175 973 Band-pass filter with 12/db per octave slope;
#X obj 30 1000 flt.bpf24~;
#X text 175 1000 Band-pass filter with 24/db per octave slope;
#X obj 30 1027 flt.c_bpf~;
#X text 175 1027 BPF coefficent calculator for biquad filter;
#X obj 30 1054 flt.c_highshelf~;
#X text 175 1054 Highshelf filter coefficent calculator for biquad;
#X obj 30 1081 flt.c_hpf~;
#X text 175 1081 HPF coefficent calculator for biquad filter;
#X obj 30 1108 flt.c_lowshelf~;
#X text 175 1108 Lowshelf filter coefficent calculator for biquad;
#X obj 30 1135 flt.c_lpf~;
#X text 175 1135 LPF coefficent calculator for biquad filter;
#X obj 30 1162 flt.c_notch~;
#X text 175 1162 Band-reject coefficent calculator for biquad filter;
#X obj 30 1189 flt.c_peak~;
#X text 175 1189 Peaking equalizer calculator for biquad.;
#X obj 30 1216 flt.dcblock2~;
#X text 175 1216 stereo DC blocker;
#X obj 30 1243 flt.dcblock~;
#X text 175 1243 mono DC blocker;
#X obj 30 1270 flt.eq_peak~;
#X text 175 1270 second order "peaking equalizer" section (gain boost
or cut near some frequency).  Also called a "parametric equalizer"
section.;
#X obj 30 1321 flt.highshelf~;
#X text 175 1321 gain boost|cut above some frequency;
#X obj 30 1348 flt.hpf12~;
#X text 175 1348 High-pass filter with 12/db per octave slope;
#X obj 30 1375 flt.hpf24~;
#X text 175 1375 High-pass filter with 24/db per octave slope;
#X obj 30 1402 flt.lowshelf~;
#X text 175 1402 gain boost|cut below some frequency;
#X obj 30 1429 flt.lpf12~;
#X text 175 1429 Low-pass filter with 12/db per octave slope;
#X obj 30 1456 flt.lpf24~;
#X text 175 1456 Low-pass filter with 24/db per octave slope;
#X obj 30 1483 flt.notch~;
#X text 175 1483 band-rejection filter;
#X obj 30 1510 flt.resonbp~;
#X text 175 1510 Simple resonant bandpass filter;
#X obj 20 1537 cnv 5 28 31 empty empty fx 4 13 0 17 -262144 -49933 0;
#X obj 20 1578 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1589 fx.distortion~;
#X text 175 1589 cubic nonlinearity distortion;
#X obj 30 1616 fx.flanger~;
#X text 175 1616 mono flanging effect;
#X obj 30 1643 fx.freeverb2~;
#X text 175 1643 freeverb2 - stereo version of freeverb;
#X obj 30 1670 fx.freeverb~;
#X text 175 1670 freeverb - common used open-source reverb;
#X obj 30 1697 fx.freqshift~;
#X text 175 1697 frequency shifter or single-sideband ring modulation;
#X obj 30 1724 fx.pitchshift~;
#X text 175 1724 simple pitch shifter based on 2 delay lines;
#X obj 30 1751 fx.zita_rev1~;
#X text 175 1751 Zita stereo reverb;
#X obj 20 1778 cnv 5 69 31 empty empty global 4 13 0 17 -262144 -49933
0;
#X obj 20 1819 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1830 global.float;
#X text 175 1830 global named float object;
#X obj 30 1857 global.int;
#X text 175 1857 global named integer object;
#X obj 30 1884 global.list;
#X text 175 1884 global named list object;
#X obj 20 1911 cnv 5 37 31 empty empty lfo 4 13 0 17 -262144 -49933 0;
#X obj 20 1952 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1963 lfo.impulse~;
#X text 175 1963 Unit-amplitude low-frequency impulse train;
#X obj 30 1990 lfo.square~;
#X text 175 1990 Positive low frequence square wave;
#X obj 30 2017 lfo.tri~;
#X text 175 2017 Positive unit-amplitude low frequency triangle wave;
#X obj 20 2044 cnv 5 47 31 empty empty list 4 13 0 17 -262144 -49933
0;
#X obj 20 2085 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 2096 list.apply_to;
#X text 175 2096 modifies list value at specified position \,
filtering it via external object.;
#X obj 30 2133 list.at;
#X text 175 2133 returns list element at given position;
#X obj 30 2160 list.choice;
#X text 175 2160 returns random element from list;
#X obj 30 2187 list.count;
#X text 175 2187 returns the number of items that equal to specified
value;
#X obj 30 2214 list.count_if;
#X text 175 2214 returns the number of items that satisfy to external
predicate.;
#X obj 30 2251 list.deinterleave;
#X text 175 2251 splits list to N lists \, each to separate output;
#X obj 30 2278 list.delta;
#X text 175 2278 returns the difference between the current list of
floats and the previous one.;
#X obj 30 2315 list.each;
#X text 175 2315 maps each list value via external object(s);
#X obj 30 2342 list.equal;
#X text 175 2342 checks if given lists are equal;
#X obj 30 2369 list.first;
#X text 175 2369 returns first list element;
#X obj 30 2396 list.gen;
#X text 175 2396 generates list of specified length via external
generator;
#X obj 30 2423 list.integrator;
#X text 175 2423 returns the sum of the previously stored list and the
current one then stores this sum.;
#X obj 30 2460 list.interleave;
#X text 175 2460 takes n lists from n inlets (specified by argument)
and output their elements sequentially (list1-1 list2-1 list1-2
list2-2 etc.).;
#X obj 30 2511 list.last;
#X text 175 2511 returns last list element;
#X obj 30 2538 list.length;
#X text 175 2538 returns the number of atoms in the message;
#X obj 30 2565 list.max;
#X text 175 2565 returns largest element in the list;
#X obj 30 2592 list.mean;
#X text 175 2592 calculates average of list of floats;
#X obj 30 2619 list.min;
#X text 175 2619 returns smallest element in the list;
#X obj 30 2646 list.normalize;
#X text 175 2646 normalizes float list values to get their sum = 1.0;
#X obj 30 2673 list.product;
#X text 175 2673 calculates product of floats in list;
#X obj 30 2700 list.range;
#X text 175 2700 returns list smallest and largest value;
#X obj 30 2727 list.reduce;
#X text 175 2727 apply function of two arguments cumulatively to the
list;
#X obj 30 2754 list.resize;
#X text 175 2754 changes list size with;
#X obj 30 2781 list.reverse;
#X text 175 2781 reverses the order of the elements in the list;
#X obj 30 2808 list.seq;
#X text 175 2808 numeric sequence list generator;
#X obj 30 2835 list.shuffle;
#X text 175 2835 randomly rearranges elements in list;
#X obj 30 2862 list.sort;
#X text 175 2862 sorts list values by ascending order;
#X obj 30 2889 list.sum;
#X text 175 2889 calculates sum of floats in list;
#X obj 30 2916 list.unpack;
#X text 175 2916 sends list element one by one separately;
#X obj 30 2943 list.unwrap;
#X text 175 2943 gets list element on first input and list with count
of each element on a second inlet.;
#X obj 30 2980 list.walk;
#X text 175 2980 Walks thru the list;
#X obj 30 3007 list.wrap;
#X text 175 3007 filters repeated elements of the list and outputs
unique elements on first outlet \, outputs the count of elements on
second.;
#X obj 20 3058 cnv 5 48 31 empty empty live 4 13 0 17 -262144 -49933
0;
#X obj 20 3099 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 3110 live.capture~;
#X text 175 3110 record up to 8s of sound and playback the recorded
sound in loop;
#X obj 20 3147 cnv 5 48 31 empty empty math 4 13 0 17 -262144 -49933
0;
#X obj 20 3188 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 3199 math.abs;
#X text 175 3199 absolute value function;
#X obj 30 3226 math.acos;
#X text 175 3226 arc cosine function;
#X obj 30 3253 math.acosh;
#X text 175 3253 inverse hyperbolic cosine function;
#X obj 30 3280 math.asin;
#X text 175 3280 arc sine function;
#X obj 30 3307 math.asinh;
#X text 175 3307 inverse hyperbolic sine function;
#X obj 30 3334 math.atan;
#X text 175 3334 arc tangent function;
#X obj 30 3361 math.atanh;
#X text 175 3361 inverse hyperbolic tangent function;
#X obj 30 3388 math.cbrt;
#X text 175 3388 cube root function;
#X obj 30 3415 math.ceil;
#X text 175 3415 round to smallest integral value not less than input
value;
#X obj 30 3442 math.cos;
#X text 175 3442 cosine function;
#X obj 30 3469 math.cosh;
#X text 175 3469 hyperbolic cosine function;
#X obj 30 3496 math.e;
#X text 175 3496 mathematical constant \, base of the natural
logarithm;
#X obj 30 3523 math.exp;
#X text 175 3523 exponential functions;
#X obj 30 3550 math.exp2;
#X text 175 3550 exponential functions;
#X obj 30 3577 math.floor;
#X text 175 3577 round to largest integral value not greater than x;
#X obj 30 3604 math.inf;
#X text 175 3604 infinity value that cannot be represented accurately;
#X obj 30 3631 math.log;
#X text 175 3631 logarithm functions;
#X obj 30 3658 math.log10;
#X text 175 3658 logarithm functions;
#X obj 30 3685 math.log2;
#X text 175 3685 logarithm functions;
#X obj 30 3712 math.nan;
#X text 175 3712 Not a Number \, unrepresentable value;
#X obj 30 3739 math.neg;
#X text 175 3739 negate function;
#X obj 30 3766 math.pi;
#X text 175 3766 mathematical constant;
#X obj 30 3793 math.reciprocal;
#X text 175 3793 calculate reciprocal number;
#X obj 30 3820 math.round;
#X text 175 3820 round to integral value \, regardless of rounding
direction;
#X obj 30 3847 math.sign;
#X text 175 3847 sign function;
#X obj 30 3874 math.sin;
#X text 175 3874 sine function;
#X obj 30 3901 math.sinh;
#X text 175 3901 hyperbolic sine function;
#X obj 30 3928 math.sqrt;
#X text 175 3928 square root function;
#X obj 30 3955 math.squared;
#X text 175 3955 value square;
#X obj 30 3982 math.tan;
#X text 175 3982 tangent function;
#X obj 30 4009 math.tanh;
#X text 175 4009 hyperbolic tangent function;
#X obj 30 4036 math.trunc;
#X text 175 4036 truncate to integer value;
#X obj 20 4063 cnv 5 38 31 empty empty msg 4 13 0 17 -262144 -49933 0;
#X obj 20 4104 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 4115 msg;
#X text 175 4115 message constructor;
#X obj 20 4142 cnv 5 58 31 empty empty noise 4 13 0 17 -262144 -49933
0;
#X obj 20 4183 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 4194 noise.pink~;
#X text 175 4194 Pink noise generator;
#X obj 30 4221 noise.white~;
#X text 175 4221 White noise generator;
#X obj 20 4248 cnv 5 38 31 empty empty osc 4 13 0 17 -262144 -49933 0;
#X obj 20 4289 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 4300 osc.impulse~;
#X text 175 4300 Bandlimited impulse train generator;
#X obj 30 4327 osc.pulse~;
#X text 175 4327 Bandlimited pulse train oscillator. ;
#X obj 30 4354 osc.saw~;
#X text 175 4354 Bandlimited saw wave oscillator;
#X obj 30 4381 osc.sinfb~;
#X text 175 4381 sine oscilator with feedback;
#X obj 30 4408 osc.square~;
#X text 175 4408 Bandlimited square wave oscillator;
#X obj 30 4435 osc.tri~;
#X text 175 4435 Bandlimited triangle wave oscillator;
#X obj 20 4462 cnv 5 47 31 empty empty pass 4 13 0 17 -262144 -49933
0;
#X obj 20 4503 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 4514 pass.changed;
#X text 175 4514 rejects redundant input values;
#X obj 30 4541 pass.if;
#X text 175 4541 pass values that accepted by predicate object;
#X obj 30 4568 pass.this;
#X text 175 4568 pass only specified values;
#X obj 20 4595 cnv 5 47 31 empty empty path 4 13 0 17 -262144 -49933
0;
#X obj 20 4636 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 4647 path.basename;
#X text 175 4647 outputs filename portion of pathname;
#X obj 30 4674 path.dirname;
#X text 175 4674 outputs directory portion of pathname;
#X obj 20 4701 cnv 5 109 31 empty empty predicates 4 13 0 17 -262144
-49933 0;
#X obj 20 4742 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 4753 is_any;
#X text 175 4753 checks if input data has *any* type;
#X obj 30 4780 is_bang;
#X text 175 4780 checks if input data has *bang* type;
#X obj 30 4807 is_even;
#X text 175 4807 checks if input number is even;
#X obj 30 4834 is_float;
#X text 175 4834 checks if input data has *float* type;
#X obj 30 4861 is_list;
#X text 175 4861 checks if input data has *list* type;
#X obj 30 4888 is_odd;
#X text 175 4888 checks if input number is odd;
#X obj 30 4915 is_pointer;
#X text 175 4915 checks if input data has *pointer* type;
#X obj 30 4942 is_symbol;
#X text 175 4942 checks if input data has *symbol* type;
#X obj 20 4969 cnv 5 89 31 empty empty property 4 13 0 17 -262144
-49933 0;
#X obj 20 5010 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5021 prop.get;
#X text 175 5021 Property extractor;
#X obj 30 5048 prop.set;
#X text 175 5048 Property injector;
#X obj 20 5075 cnv 5 67 31 empty empty random 4 13 0 17 -262144 -49933
0;
#X obj 20 5116 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5127 random.int;
#X text 175 5127 Random integer generator in specified range;
#X obj 20 5154 cnv 5 66 31 empty empty reject 4 13 0 17 -262144 -49933
0;
#X obj 20 5195 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5206 reject.if;
#X text 175 5206 reject values by predicate;
#X obj 30 5233 reject.this;
#X text 175 5233 reject only specified values;
#X obj 20 5260 cnv 5 37 31 empty empty snd 4 13 0 17 -262144 -49933 0;
#X obj 20 5301 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5312 snd.file;
#X text 175 5312 Sound file loader on steroids;
#X obj 20 5339 cnv 5 68 31 empty empty symbol 4 13 0 17 -262144 -49933
0;
#X obj 20 5380 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5391 symbol.equal;
#X text 175 5391 check symbols for equality;
#X obj 30 5418 symbol.length;
#X text 175 5418 number of characters in symbol (unicode supported);
#X obj 20 5445 cnv 5 68 31 empty empty system 4 13 0 17 -262144 -49933
0;
#X obj 20 5486 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5497 system.getenv;
#X text 175 5497 Get system environment variables;
#X obj 30 5524 system.hostname;
#X text 175 5524 outputs system hostname;
#X obj 30 5551 system.memsize;
#X text 175 5551 returns the size of physical memory (RAM) in bytes
round to float data type.;
#X obj 30 5588 system.memused;
#X text 175 5588 returns the process physical memory use - current and
peak;
#X obj 30 5615 system.screen_size;
#X text 175 5615 returns current screen size in pixels;
#X obj 20 5642 cnv 5 28 31 empty empty ui 4 13 0 17 -262144 -49933 0;
#X obj 20 5683 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5697 ui.link @title [ui.bang] @url ui.bang-help.pd;
#X text 175 5694 A bang... that's all;
#X obj 30 5720 ui.link @title [ui.bpfunc] @url ui.bpfunc-help.pd;
#X text 175 5717 Breakpoint function GUI object;
#X obj 30 5743 ui.link @title [ui.display] @url ui.display-help.pd;
#X text 175 5740 Display GUI object;
#X obj 30 5766 ui.link @title [ui.keyboard] @url ui.keyboard-help.pd;
#X text 175 5763 keyboard widget;
#X obj 30 5789 ui.link @title [ui.knob] @url ui.knob-help.pd;
#X text 175 5786 knob widget;
#X obj 30 5812 ui.link @title [ui.matrix] @url ui.matrix-help.pd;
#X text 175 5809 The matrix of toggles has you.;
#X obj 30 5835 ui.link @title [ui.scope~] @url ui.scope~-help.pd;
#X text 175 5832 Scope GUI object;
#X obj 30 5858 ui.link @title [ui.slider2d] @url ui.slider2d-help.pd;
#X text 175 5855 2D slider widget;
#X obj 30 5881 ui.link @title [ui.sliders] @url ui.sliders-help.pd;
#X text 175 5878 Multiple slider widget;
#X obj 30 5904 ui.link @title [ui.spectroscope~] @url
ui.spectroscope~-help.pd;
#X text 175 5901 Spectroscope GUI object;
#X obj 30 5927 ui.link @title [ui.toggle] @url ui.toggle-help.pd;
#X text 175 5924 modern toggle widget;
#X obj 20 5947 cnv 5 69 31 empty empty vector 4 13 0 17 -262144 -49933
0;
#X obj 20 5988 cnv 1 685 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 5999 vector.distance;
#X text 175 5999 returns euclidean distance between two points;
#X obj 30 6026 vector.dot;
#X text 175 6026 treats list of floats as vector \, returns the dot
product (sum of the elements of two lists with same indexes
multiplied).;
#X obj 30 6077 vector.length;
#X text 175 6077 treats list of floats as vector \, returns vector
length: sqrt(element(1)^2 + ...element(n)^2).;
#X obj 30 6114 vector.normalize;
#X text 175 6114 returns normalized vector;
#X obj 1 1 cnv 5 712 40 empty empty ceammc 20 20 0 20 -104026 -4096 0;
#X obj 1 6141 cnv 5 712 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 6141 version: v0.1 \, license: GPL3;
#X obj 20 6160 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;